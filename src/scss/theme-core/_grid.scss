@mixin gs-grid-row($gutter-position: 'left') {
  $gutter: $global-padding;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  @if $gutter-position == 'center' {
    margin-left: -$gutter / 2;
    margin-right: -$gutter / 2;

    > div {
      padding-left: $gutter / 2;
      padding-right: $gutter / 2;
    }
  } @else if $gutter-position == 'none' {
    > div {
      padding-left: 0;
    }
  } @else {
    margin-left: -$gutter;
  }
}

@mixin gs-grid-column($columns, $total: $grid-column-count) {
  $gutter: $global-padding;
  @if $columns == 'auto' {
    flex: 1 1 0;
    max-width: 100%;
  } @else {
    flex: 0 0 auto;
    flex-basis: $columns / $total * 100%;
    max-width: $columns / $total * 100%;
  }

  padding-left: $gutter;
}

@mixin gs-grid-reorder($elems) {
  $elem-count: length($elems);

  > * {
    order: $elem-count + 1;
  }

  @for $i from 1 through $elem-count {
    > #{nth($elems, $i)} {
      order: $i;
    }
  }
}

// ==========================================================================
// Experimental feature
// The mixin does not take gutter position into consideration
// ==========================================================================
@mixin gs-grid-based-maxwidth($columns) {
  max-width: (($grid-wrapper-max-width - nth($grid-gutter, length($grid-gutter))) / $grid-column-count * $columns) - nth($grid-gutter, length($grid-gutter));
}
